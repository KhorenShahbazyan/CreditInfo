// <auto-generated />
using System;
using KhorenTest.CreditInfo.DataAccess.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KhorenTest.CreditInfo.DataAccess.Migrations
{
    [DbContext(typeof(KhorenTestDbContext))]
    partial class KhorenTestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KhorenTest.CreditInfo.DataAccess.Entities.Contract", b =>
                {
                    b.Property<long>("ContractCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfCreate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InstallmentAmountCurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal>("InstallmentAmountValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrigialAmountCurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal>("OrigialAmountValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ContractCode");

                    b.HasIndex("InstallmentAmountCurrencyId");

                    b.HasIndex("OrigialAmountCurrencyId");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("KhorenTest.CreditInfo.DataAccess.Entities.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("KhorenTest.CreditInfo.DataAccess.Entities.Customer", b =>
                {
                    b.Property<long>("CustomerCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("NationalId")
                        .HasColumnType("int");

                    b.HasKey("CustomerCode");

                    b.HasIndex("NationalId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("KhorenTest.CreditInfo.DataAccess.Entities.National", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("National");
                });

            modelBuilder.Entity("KhorenTest.CreditInfo.DataAccess.Entities.Contract", b =>
                {
                    b.HasOne("KhorenTest.CreditInfo.DataAccess.Entities.Currency", "InstallmentAmountCurrency")
                        .WithMany("InstallmentAmountCurrencies")
                        .HasForeignKey("InstallmentAmountCurrencyId")
                        .HasConstraintName("FK_Contract_InstallmentCurrency")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KhorenTest.CreditInfo.DataAccess.Entities.Currency", "OrigialAmountCurrency")
                        .WithMany("OrigialAmountCurrencies")
                        .HasForeignKey("OrigialAmountCurrencyId")
                        .HasConstraintName("FK_Contract_OrigialCurrency")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("KhorenTest.CreditInfo.DataAccess.Entities.Customer", b =>
                {
                    b.HasOne("KhorenTest.CreditInfo.DataAccess.Entities.National", "National")
                        .WithMany("Customers")
                        .HasForeignKey("NationalId")
                        .HasConstraintName("FK_Customer_National")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
